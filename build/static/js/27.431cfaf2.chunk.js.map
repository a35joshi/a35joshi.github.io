{"version":3,"sources":["app/views/material-kit/auto-complete/Downshift.jsx","app/views/material-kit/auto-complete/ReactSelect.jsx","app/views/material-kit/auto-complete/AutoSuggest.jsx","app/views/material-kit/auto-complete/AppAutoComplete.jsx"],"names":["suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","Object","objectWithoutProperties","_excluded","react_default","a","createElement","TextField","assign","objectSpread2","inputRef","root","inputRoot","input","inputInput","renderSuggestion","suggestionProps","suggestion","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","indexOf","MenuItem","key","selected","component","style","fontWeight","getSuggestions","value","_ref$showEmpty","arguments","length","undefined","showEmpty","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","slice","DownshiftMultiple","props","_React$useState","React","useState","_React$useState2","slicedToArray","setInputValue","_React$useState3","_React$useState4","setSelectedItem","handleKeyDown","event","handleDelete","item","newSelectedItem","toConsumableArray","splice","downshift_esm","id","onChange","concat","_ref2","getInputProps","getItemProps","getLabelProps","isOpen","inputValue2","selectedItem2","_getInputProps","onKeyDown","placeholder","onBlur","onFocus","_excluded2","className","container","fullWidth","InputLabelProps","startAdornment","map","Chip","tabIndex","chip","onDelete","target","handleInputChange","Paper","paper","square","popperNode","useStyles","makeStyles","theme","flexGrow","height","position","zIndex","marginTop","spacing","left","right","margin","flexWrap","width","divider","IntegrationDownshift","_ref3","getMenuProps","_getInputProps2","_excluded3","shrink","_ref4","_getInputProps3","_excluded4","node","Popper","open","anchorEl","suppressRefError","clientWidth","_ref5","clearSelection","openMenu","_getInputProps4","_excluded5","display","padding","valueContainer","flex","alignItems","overflow","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","bottom","inputComponent","_ref","ReactSelect_excluded","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","TextFieldProps","Menu","MultiValue","clsx","defineProperty","isFocused","removeProps","onClick","deleteIcon","Cancel_default","NoOptionsMessage","Typography","color","Option","Placeholder","SingleValue","ValueContainer","IntegrationReactSelect","useTheme","single","setSingle","multi","setMulti","selectStyles","base","text","primary","& input","font","NoSsr","react_select_browser_esm","styles","inputId","htmlFor","options","isMulti","renderInputComponent","_inputProps$inputRef","AutoSuggest_excluded","query","matches","match","parts","parse","part","highlight","getSuggestionValue","suggestionsContainerOpen","suggestionsList","listStyleType","IntegrationAutosuggest","setAnchorEl","popper","state","setState","_React$useState5","_React$useState6","stateSuggestions","setSuggestions","handleChange","name","newValue","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","dist_default","renderSuggestionsContainer","containerProps","Boolean","AppAutoComplete","matx","routeSegments","path","title"],"mappings":"0YAWMA,EAAc,CAClB,CAAEC,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,mCACT,CAAEA,MAAO,oCACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,YACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sBAGX,SAASC,EAAYC,GACnB,IAAQC,EAAuCD,EAAvCC,WAAYC,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,IAAQC,EAArCC,OAAAC,EAAA,EAAAD,CAA+CL,EAA/CO,GAEA,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,CACEX,WAAUI,OAAAQ,EAAA,EAAAR,CAAA,CACRS,SAAUX,EACVD,QAAS,CACPa,KAAMb,EAAQc,UACdC,MAAOf,EAAQgB,aAEdjB,IAEDG,IAKV,SAASe,EAAiBC,GACxB,IACEC,EAKED,EALFC,WACAC,EAIEF,EAJFE,MACAC,EAGEH,EAHFG,UAIIC,EADFJ,EAFFK,mBAGyCH,EACrCI,GAFFN,EADFO,cAGkC,IAAIC,QAAQP,EAAWvB,QAAU,EAErE,OACEU,EAAAC,EAAAC,cAACmB,EAAA,EAADxB,OAAAO,OAAA,GACMW,EADN,CAEEO,IAAKT,EAAWvB,MAChBiC,SAAUP,EACVQ,UAAU,MACVC,MAAO,CACLC,WAAYR,EAAa,IAAM,OAGhCL,EAAWvB,OAYlB,SAASqC,EAAeC,GAAmC,IAAAC,GAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAAtBG,iBAA0B,IAAAJ,KACnDK,EAAaC,IAAOP,EAAMQ,QAAQC,cAClCC,EAAcJ,EAAWH,OAC3BQ,EAAQ,EAEZ,OAAuB,IAAhBD,GAAsBL,EAEzB5C,EAAYmD,OAAO,SAAA3B,GACjB,IAAM4B,EACJF,EAAQ,GACR1B,EAAWvB,MAAMoD,MAAM,EAAGJ,GAAaD,gBAAkBH,EAM3D,OAJIO,IACFF,GAAS,GAGJE,IAVT,GAcN,SAASE,EAAkBC,GACzB,IAAQlD,EAAYkD,EAAZlD,QACRmD,EAAoCC,IAAMC,SAAS,IAAnDC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAgD,EAAA,GAAOX,EAAPc,EAAA,GAAmBE,EAAnBF,EAAA,GACAG,EAAwCL,IAAMC,SAAS,IAAvDK,EAAAvD,OAAAoD,EAAA,EAAApD,CAAAsD,EAAA,GAAOhC,EAAPiC,EAAA,GAAqBC,EAArBD,EAAA,GAEA,SAASE,EAAcC,GAEnBpC,EAAaY,SACZG,EAAWH,QACE,cAAdwB,EAAMjC,KAEN+B,EAAgBlC,EAAauB,MAAM,EAAGvB,EAAaY,OAAS,IAiBhE,IAAMyB,EAAe,SAAAC,GAAI,OAAI,WAC3B,IAAMC,EAAe7D,OAAA8D,EAAA,EAAA9D,CAAOsB,GAC5BuC,EAAgBE,OAAOF,EAAgBtC,QAAQqC,GAAO,GACtDJ,EAAgBK,KAGlB,OACE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,GAAG,qBACH5B,WAAYA,EACZ6B,SAnBJ,SAAsBN,GACpB,IAAIC,EAAe7D,OAAA8D,EAAA,EAAA9D,CAAOsB,IACa,IAAnCuC,EAAgBtC,QAAQqC,KAC1BC,EAAe,GAAAM,OAAAnE,OAAA8D,EAAA,EAAA9D,CAAO6D,GAAP,CAAwBD,KAEzCP,EAAc,IACdG,EAAgBK,IAcdvC,aAAcA,GAEb,SAAA8C,GAQK,IAPJC,EAOID,EAPJC,cACAC,EAMIF,EANJE,aACAC,EAKIH,EALJG,cACAC,EAIIJ,EAJJI,OACYC,EAGRL,EAHJ/B,WACcqC,EAEVN,EAFJ9C,aACAF,EACIgD,EADJhD,iBAEAuD,EAAqDN,EAAc,CACjEO,UAAWnB,EACXoB,YAAa,8BAFPC,EAARH,EAAQG,OAAQZ,EAAhBS,EAAgBT,SAAUa,EAA1BJ,EAA0BI,QAAYpF,EAAtCK,OAAAC,EAAA,EAAAD,CAAA2E,EAAAK,GAKA,OACE7E,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQqF,WACrBxF,EAAY,CACXyF,WAAW,EACXtF,UACAJ,MAAO,YACP2F,gBAAiBb,IACjB3E,WAAY,CACVyF,eAAgB/D,EAAagE,IAAI,SAAA1B,GAAI,OACnCzD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACE9D,IAAKmC,EACL4B,UAAW,EACX/F,MAAOmE,EACPqB,UAAWpF,EAAQ4F,KACnBC,SAAU/B,EAAaC,OAG3BkB,SACAZ,SAAU,SAAAR,IA1DxB,SAA2BA,GACzBL,EAAcK,EAAMiC,OAAO5D,OA0Db6D,CAAkBlC,GAClBQ,EAASR,IAEXqB,WAEFpF,eAGD6E,EACCrE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOZ,UAAWpF,EAAQiG,MAAOC,QAAM,GACpCjE,EAAe2C,GAAaa,IAAI,SAACtE,EAAYC,GAAb,OAC/BH,EAAiB,CACfE,aACAC,QACAC,UAAWoD,EAAa,CAAEV,KAAM5C,EAAWvB,QAC3C2B,mBACAE,aAAcoD,OAIlB,QAYhB,IA+BIsB,EA/BEC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCzF,KAAM,CACJ0F,SAAU,EACVC,OAAQ,KAEVnB,UAAW,CACTkB,SAAU,EACVE,SAAU,YAEZR,MAAO,CACLQ,SAAU,WACVC,OAAQ,EACRC,UAAWL,EAAMM,QAAQ,GACzBC,KAAM,EACNC,MAAO,GAETlB,KAAM,CACJmB,OAAQT,EAAMM,QAAQ,GAAK,MAE7B9F,UAAW,CACTkG,SAAU,QAEZhG,WAAY,CACViG,MAAO,OACPV,SAAU,GAEZW,QAAS,CACPV,OAAQF,EAAMM,QAAQ,OAMX,SAASO,IACtB,IAAMnH,EAAUoG,IAEhB,OACE9F,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQa,MACtBP,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAWC,GAAG,oBACX,SAAAgD,GASK,IARJ5C,EAQI4C,EARJ5C,cACAC,EAOI2C,EAPJ3C,aACAC,EAMI0C,EANJ1C,cACA2C,EAKID,EALJC,aACA9F,EAII6F,EAJJ7F,iBACAiB,EAGI4E,EAHJ5E,WACAmC,EAEIyC,EAFJzC,OACAlD,EACI2F,EADJ3F,aAEA6F,EAA2C9C,EAAc,CACvDQ,YAAa,wCADPC,EAARqC,EAAQrC,OAAQC,EAAhBoC,EAAgBpC,QAAYpF,EAA5BK,OAAAC,EAAA,EAAAD,CAAAmH,EAAAC,GAIA,OACEjH,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQqF,WACrBxF,EAAY,CACXyF,WAAW,EACXtF,UACAJ,MAAO,UACP2F,gBAAiBb,EAAc,CAAE8C,QAAQ,IACzCzH,WAAY,CAAEkF,SAAQC,WACtBpF,eAGFQ,EAAAC,EAAAC,cAAA,MAAS6G,IACN1C,EACCrE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOZ,UAAWpF,EAAQiG,MAAOC,QAAM,GACpCjE,EAAeO,GAAYiD,IAAI,SAACtE,EAAYC,GAAb,OAC9BH,EAAiB,CACfE,aACAC,QACAC,UAAWoD,EAAa,CAAEV,KAAM5C,EAAWvB,QAC3C2B,mBACAE,oBAIJ,SAMdnB,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQkH,UACxB5G,EAAAC,EAAAC,cAACyC,EAAD,CAAmBjD,QAASA,IAC5BM,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQkH,UACxB5G,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAWC,GAAG,oBACX,SAAAqD,GASK,IARJjD,EAQIiD,EARJjD,cACAC,EAOIgD,EAPJhD,aACAC,EAMI+C,EANJ/C,cACA2C,EAKII,EALJJ,aACA9F,EAIIkG,EAJJlG,iBACAiB,EAGIiF,EAHJjF,WACAmC,EAEI8C,EAFJ9C,OACAlD,EACIgG,EADJhG,aAEAiG,EAA2ClD,EAAc,CACvDQ,YAAa,gBADPC,EAARyC,EAAQzC,OAAQC,EAAhBwC,EAAgBxC,QAAYpF,EAA5BK,OAAAC,EAAA,EAAAD,CAAAuH,EAAAC,GAIA,OACErH,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQqF,WACrBxF,EAAY,CACXyF,WAAW,EACXtF,UACAJ,MAAO,UACPG,WAAY,CAAEkF,SAAQC,WACtBK,gBAAiBb,EAAc,CAAE8C,QAAQ,IACzC1H,aACAG,IAAK,SAAA2H,GACHzB,EAAayB,KAIjBtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAQC,KAAMnD,EAAQoD,SAAU5B,GAC9B7F,EAAAC,EAAAC,cAAA,MACOmE,EACD0C,EAAa,GAAI,CAAEW,kBAAkB,IACrC,GAEJ1H,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACEE,QAAM,EACNnE,MAAO,CACL4E,UAAW,EACXM,MAAOd,EAAaA,EAAW8B,iBAAc3F,IAG9CL,EAAeO,GAAYiD,IAAI,SAACtE,EAAYC,GAAb,OAC9BH,EAAiB,CACfE,aACAC,QACAC,UAAWoD,EAAa,CAAEV,KAAM5C,EAAWvB,QAC3C2B,mBACAE,yBAUlBnB,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQkH,UACxB5G,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAWC,GAAG,qBACX,SAAA8D,GAWK,IAVJC,EAUID,EAVJC,eACA3D,EASI0D,EATJ1D,cACAC,EAQIyD,EARJzD,aACAC,EAOIwD,EAPJxD,cACA2C,EAMIa,EANJb,aACA9F,EAKI2G,EALJ3G,iBACAiB,EAII0F,EAJJ1F,WACAmC,EAGIuD,EAHJvD,OACAyD,EAEIF,EAFJE,SACA3G,EACIyG,EADJzG,aAEA4G,EAAqD7D,EAAc,CACjEH,SAAU,SAAAR,GACmB,KAAvBA,EAAMiC,OAAO5D,OACfiG,KAGJjD,QAASkD,EACTpD,YAAa,wCAPPC,EAARoD,EAAQpD,OAAQZ,EAAhBgE,EAAgBhE,SAAUa,EAA1BmD,EAA0BnD,QAAYpF,EAAtCK,OAAAC,EAAA,EAAAD,CAAAkI,EAAAC,GAUA,OACEhI,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQqF,WACrBxF,EAAY,CACXyF,WAAW,EACXtF,UACAJ,MAAO,YACP2F,gBAAiBb,EAAc,CAAE8C,QAAQ,IACzCzH,WAAY,CAAEkF,SAAQZ,WAAUa,WAChCpF,eAGFQ,EAAAC,EAAAC,cAAA,MAAS6G,IACN1C,EACCrE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOZ,UAAWpF,EAAQiG,MAAOC,QAAM,GACpCjE,EAAeO,EAAY,CAAED,WAAW,IAAQkD,IAC/C,SAACtE,EAAYC,GAAb,OACEH,EAAiB,CACfE,aACAC,QACAC,UAAWoD,EAAa,CAAEV,KAAM5C,EAAWvB,QAC3C2B,mBACAE,oBAIN,8GCrZd9B,EAAc,CAClB,CAAEC,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,mCACT,CAAEA,MAAO,oCACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,YACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sBACT6F,IAAI,SAAAtE,GAAU,MAAK,CACnBe,MAAOf,EAAWvB,MAClBA,MAAOuB,EAAWvB,SAGdwG,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCzF,KAAM,CACJ0F,SAAU,EACVC,OAAQ,KAEVzF,MAAO,CACLwH,QAAS,OACTC,QAAS,EACThC,OAAQ,QAEViC,eAAgB,CACdF,QAAS,OACTvB,SAAU,OACV0B,KAAM,EACNC,WAAY,SACZC,SAAU,UAEZhD,KAAM,CACJmB,OAAQT,EAAMM,QAAQ,GAAK,MAE7BiC,YAAa,CACXC,gBAAiBC,YACQ,UAAvBzC,EAAM0C,QAAQC,KACV3C,EAAM0C,QAAQE,KAAK,KACnB5C,EAAM0C,QAAQE,KAAK,KACvB,MAGJC,iBAAkB,CAChBX,QAASlC,EAAMM,QAAQ,EAAG,IAE5BwC,YAAa,CACXC,SAAU,IAEZrE,YAAa,CACXyB,SAAU,WACVI,KAAM,EACNyC,OAAQ,EACRD,SAAU,IAEZpD,MAAO,CACLQ,SAAU,WACVC,OAAQ,EACRC,UAAWL,EAAMM,QAAQ,GACzBC,KAAM,EACNC,MAAO,GAETI,QAAS,CACPV,OAAQF,EAAMM,QAAQ,OAsB1B,SAAS2C,EAATC,GAAgD,IAAtB5I,EAAsB4I,EAAtB5I,SAAasC,EAAS/C,OAAAC,EAAA,EAAAD,CAAAqJ,EAAAC,GAC9C,OAAOnJ,EAAAC,EAAAC,cAAA,MAAAL,OAAAO,OAAA,CAAKT,IAAKW,GAAcsC,IAsJjC,IAAMwG,EAAa,CACjBC,QAhJF,SAAiBzG,GACf,IACE0G,EAIE1G,EAJF0G,SACAC,EAGE3G,EAHF2G,WACAC,EAEE5G,EAFF4G,SAHFC,EAKI7G,EADF8G,YAAehK,EAJjB+J,EAIiB/J,QAASiK,EAJ1BF,EAI0BE,eAG1B,OACE3J,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,CACE4E,WAAS,EACTvF,WAAY,CACVwJ,iBACAzJ,WAAWK,OAAAQ,EAAA,EAAAR,CAAA,CACTiF,UAAWpF,EAAQe,MACnBd,IAAK6J,EACLF,YACGC,KAGHI,KA6HRC,KApBF,SAAchH,GACZ,OACE5C,EAAAC,EAAAC,cAACwF,EAAA,EAAD7F,OAAAO,OAAA,CACEwF,QAAM,EACNd,UAAWlC,EAAM8G,YAAYhK,QAAQiG,OACjC/C,EAAM2G,YAET3G,EAAM0G,WAcXO,WA1CF,SAAoBjH,GAClB,OACE5C,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,UAAW,EACX/F,MAAOsD,EAAM0G,SACbxE,UAAWgF,YAAKlH,EAAM8G,YAAYhK,QAAQ4F,KAA3BzF,OAAAkK,EAAA,EAAAlK,CAAA,GACZ+C,EAAM8G,YAAYhK,QAAQ6I,YAAc3F,EAAMoH,YAEjDzE,SAAU3C,EAAMqH,YAAYC,QAC5BC,WAAYnK,EAAAC,EAAAC,cAACkK,EAAAnK,EAAe2C,EAAMqH,gBAkCtCI,iBA7KF,SAA0BzH,GACxB,OACE5C,EAAAC,EAAAC,cAACoK,EAAA,EAADzK,OAAAO,OAAA,CACEmK,MAAM,gBACNzF,UAAWlC,EAAM8G,YAAYhK,QAAQmJ,kBACjCjG,EAAM2G,YAET3G,EAAM0G,WAuKXkB,OApHF,SAAgB5H,GACd,OACE5C,EAAAC,EAAAC,cAACmB,EAAA,EAADxB,OAAAO,OAAA,CACET,IAAKiD,EAAM4G,SACXjI,SAAUqB,EAAMoH,UAChBxI,UAAU,MACVC,MAAO,CACLC,WAAYkB,EAAM1B,WAAa,IAAM,MAEnC0B,EAAM2G,YAET3G,EAAM0G,WA0GXmB,YA7FF,SAAqB7H,GACnB,OACE5C,EAAAC,EAAAC,cAACoK,EAAA,EAADzK,OAAAO,OAAA,CACEmK,MAAM,gBACNzF,UAAWlC,EAAM8G,YAAYhK,QAAQgF,aACjC9B,EAAM2G,YAET3G,EAAM0G,WAuFXoB,YA5EF,SAAqB9H,GACnB,OACE5C,EAAAC,EAAAC,cAACoK,EAAA,EAADzK,OAAAO,OAAA,CACE0E,UAAWlC,EAAM8G,YAAYhK,QAAQoJ,aACjClG,EAAM2G,YAET3G,EAAM0G,WAuEXqB,eA5DF,SAAwB/H,GACtB,OACE5C,EAAAC,EAAAC,cAAA,OAAK4E,UAAWlC,EAAM8G,YAAYhK,QAAQyI,gBACvCvF,EAAM0G,YA4DE,SAASsB,IACtB,IAAMlL,EAAUoG,IACVE,EAAQ6E,cACdhI,EAA4BC,IAAMC,SAAS,MAA3CC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAgD,EAAA,GAAOiI,EAAP9H,EAAA,GAAe+H,EAAf/H,EAAA,GACAG,EAA0BL,IAAMC,SAAS,MAAzCK,EAAAvD,OAAAoD,EAAA,EAAApD,CAAAsD,EAAA,GAAO6H,EAAP5H,EAAA,GAAc6H,EAAd7H,EAAA,GAUA,IAAM8H,EAAe,CACnBzK,MAAO,SAAA0K,GAAI,OAAAtL,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNsL,GADM,IAETZ,MAAOvE,EAAM0C,QAAQ0C,KAAKC,QAC1BC,UAAW,CACTC,KAAM,eAKZ,OACEvL,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQa,MACtBP,EAAAC,EAAAC,cAACsL,EAAA,EAAD,KACExL,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CACE/L,QAASA,EACTgM,OAAQR,EACRS,QAAQ,sBACRhC,eAAgB,CACdrK,MAAO,UACP2F,gBAAiB,CACf2G,QAAS,sBACT1E,QAAQ,GAEVxC,YAAa,mCAEfmH,QAASxM,EACT+J,WAAYA,EACZxH,MAAOkJ,EACP/G,SApCR,SAA4BnC,GAC1BmJ,EAAUnJ,MAqCN5B,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQkH,UACxB5G,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CACE/L,QAASA,EACTgM,OAAQR,EACRS,QAAQ,wBACRhC,eAAgB,CACdrK,MAAO,YACP2F,gBAAiB,CACf2G,QAAS,wBACT1E,QAAQ,GAEVxC,YAAa,6BAEfmH,QAASxM,EACT+J,WAAYA,EACZxH,MAAOoJ,EACPjH,SAlDR,SAA2BnC,GACzBqJ,EAASrJ,IAkDHkK,SAAO,kGC7UXzM,GAAc,CAClB,CAAEC,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,mCACT,CAAEA,MAAO,oCACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,YACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sBAGX,SAASyM,GAAqBvM,GAC5B,IAAQE,EAAgDF,EAAhDE,QAARsM,EAAwDxM,EAAvCc,gBAAjB,IAAA0L,EAA4B,aAA5BA,EAAsCrM,EAAkBH,EAAlBG,IAAQC,EAA9CC,OAAAC,EAAA,EAAAD,CAAwDL,EAAxDyM,GAEA,OACEjM,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,CACE4E,WAAS,EACTvF,WAAY,CACVa,SAAU,SAAAgH,GACR3H,EAAI2H,GACJhH,EAASgH,IAEX5H,QAAS,CACPe,MAAOf,EAAQe,SAGfb,IAKV,SAASe,GAAiBE,EAA1BqI,GAAgE,IAAxBgD,EAAwBhD,EAAxBgD,MAAOlL,EAAiBkI,EAAjBlI,cACvCmL,EAAUC,IAAMvL,EAAWvB,MAAO4M,GAClCG,EAAQC,IAAMzL,EAAWvB,MAAO6M,GAEtC,OACEnM,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUE,SAAUP,EAAeQ,UAAU,OAC3CxB,EAAAC,EAAAC,cAAA,WACGmM,EAAMlH,IAAI,SAAAoH,GAAI,OACbvM,EAAAC,EAAAC,cAAA,QACEoB,IAAKiL,EAAKnB,KACV3J,MAAO,CAAEC,WAAY6K,EAAKC,UAAY,IAAM,MAE3CD,EAAKnB,UA4BlB,SAASqB,GAAmB5L,GAC1B,OAAOA,EAAWvB,MAGpB,IAAMwG,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCzF,KAAM,CACJ2F,OAAQ,IACRD,SAAU,GAEZlB,UAAW,CACToB,SAAU,YAEZuG,yBAA0B,CACxBvG,SAAU,WACVC,OAAQ,EACRC,UAAWL,EAAMM,QAAQ,GACzBC,KAAM,EACNC,MAAO,GAET3F,WAAY,CACVoH,QAAS,SAEX0E,gBAAiB,CACflG,OAAQ,EACRyB,QAAS,EACT0E,cAAe,QAEjBhG,QAAS,CACPV,OAAQF,EAAMM,QAAQ,OAIX,SAASuG,KACtB,IAAMnN,EAAUoG,KAChBjD,EAAgCC,IAAMC,SAAS,MAA/CC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAgD,EAAA,GAAO4E,EAAPzE,EAAA,GAAiB8J,EAAjB9J,EAAA,GACAG,EAA0BL,IAAMC,SAAS,CACvC+H,OAAQ,GACRiC,OAAQ,KAFV3J,EAAAvD,OAAAoD,EAAA,EAAApD,CAAAsD,EAAA,GAAO6J,EAAP5J,EAAA,GAAc6J,EAAd7J,EAAA,GAKA8J,EAA2CpK,IAAMC,SAAS,IAA1DoK,EAAAtN,OAAAoD,EAAA,EAAApD,CAAAqN,EAAA,GAAOE,EAAPD,EAAA,GAAyBE,EAAzBF,EAAA,GAUMG,EAAe,SAAAC,GAAI,OAAI,SAAChK,EAADuD,GAAyB,IAAf0G,EAAe1G,EAAf0G,SACrCP,EAASpN,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJmN,GADG,GAAAnN,OAAAkK,EAAA,EAAAlK,CAAA,GAEL0N,EAAOC,OAINC,EAAmB,CACvB1B,wBACA1M,YAAa+N,EACbM,4BAlBsC,SAAAzJ,GAAe,IAAZrC,EAAYqC,EAAZrC,MACzCyL,EA/DJ,SAAwBzL,GACtB,IAAMM,EAAaC,IAAOP,EAAMQ,QAAQC,cAClCC,EAAcJ,EAAWH,OAC3BQ,EAAQ,EAEZ,OAAuB,IAAhBD,EACH,GACAjD,GAAYmD,OAAO,SAAA3B,GACjB,IAAM4B,EACJF,EAAQ,GACR1B,EAAWvB,MAAMoD,MAAM,EAAGJ,GAAaD,gBAAkBH,EAM3D,OAJIO,IACFF,GAAS,GAGJE,IA+CId,CAAeC,KAkB9B+L,4BAfsC,WACtCN,EAAe,KAefZ,sBACA9L,qBAGF,OACEX,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQa,MACtBP,EAAAC,EAAAC,cAAC0N,EAAA3N,EAADJ,OAAAO,OAAA,GACMqN,EADN,CAEEjO,WAAY,CACVE,UACAoE,GAAI,2BACJxE,MAAO,UACPoF,YAAa,kCACb9C,MAAOoL,EAAMlC,OACb/G,SAAUuJ,EAAa,WAEzBtH,MAAO,CACLjB,UAAWrF,EAAQqF,UACnB2H,yBAA0BhN,EAAQgN,yBAClCC,gBAAiBjN,EAAQiN,gBACzB9L,WAAYnB,EAAQmB,YAEtBgN,2BAA4B,SAAAhC,GAAO,OACjC7L,EAAAC,EAAAC,cAACwF,EAAA,EAAD7F,OAAAO,OAAA,GAAWyL,EAAQiC,eAAnB,CAAmClI,QAAM,IACtCiG,EAAQvC,cAIftJ,EAAAC,EAAAC,cAAA,OAAK4E,UAAWpF,EAAQkH,UACxB5G,EAAAC,EAAAC,cAAC0N,EAAA3N,EAADJ,OAAAO,OAAA,GACMqN,EADN,CAEEjO,WAAY,CACVE,UACAoE,GAAI,2BACJxE,MAAO,UACPoF,YAAa,cACb9C,MAAOoL,EAAMD,OACbhJ,SAAUuJ,EAAa,UACvBhN,SAAU,SAAAgH,GACRwF,EAAYxF,IAEdrC,gBAAiB,CACfiC,QAAQ,IAGZlB,MAAO,CACL2G,gBAAiBjN,EAAQiN,gBACzB9L,WAAYnB,EAAQmB,YAEtBgN,2BAA4B,SAAAhC,GAAO,OACjC7L,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAQE,SAAUA,EAAUD,KAAMuG,QAAQlC,EAAQvC,WAChDtJ,EAAAC,EAAAC,cAACwF,EAAA,EAAD7F,OAAAO,OAAA,CACEwF,QAAM,GACFiG,EAAQiC,eAFd,CAGErM,MAAO,CAAEkF,MAAOc,EAAWA,EAASE,iBAAc3F,KAEjD6J,EAAQvC,gBCpMR0E,UA1BS,WACtB,OACEhO,EAAAC,EAAAC,cAAA,OAAK4E,UAAU,WACb9E,EAAAC,EAAAC,cAAA,OAAM4E,UAAU,YACd9E,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CACEC,cAAe,CACb,CAAEX,KAAM,WAAYY,KAAM,aAC1B,CAAEZ,KAAM,oBAIdvN,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAYG,MAAM,aAChBpO,EAAAC,EAAAC,cAAC2G,EAAD,OAEF7G,EAAAC,EAAAC,cAAA,OAAK4E,UAAU,UACf9E,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAYG,MAAM,gBAChBpO,EAAAC,EAAAC,cAAC0K,EAAD,OAEF5K,EAAAC,EAAAC,cAAA,OAAK4E,UAAU,UACf9E,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAYG,MAAM,qBAChBpO,EAAAC,EAAAC,cAAC2M,GAAD","file":"static/js/27.431cfaf2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport deburr from \"lodash/deburr\";\nimport Downshift from \"downshift\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst suggestions = [\n  { label: \"Afghanistan\" },\n  { label: \"Aland Islands\" },\n  { label: \"Albania\" },\n  { label: \"Algeria\" },\n  { label: \"American Samoa\" },\n  { label: \"Andorra\" },\n  { label: \"Angola\" },\n  { label: \"Anguilla\" },\n  { label: \"Antarctica\" },\n  { label: \"Antigua and Barbuda\" },\n  { label: \"Argentina\" },\n  { label: \"Armenia\" },\n  { label: \"Aruba\" },\n  { label: \"Australia\" },\n  { label: \"Austria\" },\n  { label: \"Azerbaijan\" },\n  { label: \"Bahamas\" },\n  { label: \"Bahrain\" },\n  { label: \"Bangladesh\" },\n  { label: \"Barbados\" },\n  { label: \"Belarus\" },\n  { label: \"Belgium\" },\n  { label: \"Belize\" },\n  { label: \"Benin\" },\n  { label: \"Bermuda\" },\n  { label: \"Bhutan\" },\n  { label: \"Bolivia, Plurinational State of\" },\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\n  { label: \"Bosnia and Herzegovina\" },\n  { label: \"Botswana\" },\n  { label: \"Bouvet Island\" },\n  { label: \"Brazil\" },\n  { label: \"British Indian Ocean Territory\" },\n  { label: \"Brunei Darussalam\" }\n];\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        ...InputProps\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestionProps) {\n  const {\n    suggestion,\n    index,\n    itemProps,\n    highlightedIndex,\n    selectedItem\n  } = suggestionProps;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || \"\").indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired\n};\n\nfunction getSuggestions(value, { showEmpty = false } = {}) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0 && !showEmpty\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction DownshiftMultiple(props) {\n  const { classes } = props;\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [selectedItem, setSelectedItem] = React.useState([]);\n\n  function handleKeyDown(event) {\n    if (\n      selectedItem.length &&\n      !inputValue.length &&\n      event.key === \"Backspace\"\n    ) {\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\n    }\n  }\n\n  function handleInputChange(event) {\n    setInputValue(event.target.value);\n  }\n\n  function handleChange(item) {\n    let newSelectedItem = [...selectedItem];\n    if (newSelectedItem.indexOf(item) === -1) {\n      newSelectedItem = [...newSelectedItem, item];\n    }\n    setInputValue(\"\");\n    setSelectedItem(newSelectedItem);\n  }\n\n  const handleDelete = item => () => {\n    const newSelectedItem = [...selectedItem];\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n    setSelectedItem(newSelectedItem);\n  };\n\n  return (\n    <Downshift\n      id=\"downshift-multiple\"\n      inputValue={inputValue}\n      onChange={handleChange}\n      selectedItem={selectedItem}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        isOpen,\n        inputValue: inputValue2,\n        selectedItem: selectedItem2,\n        highlightedIndex\n      }) => {\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n          onKeyDown: handleKeyDown,\n          placeholder: \"Select multiple countries\"\n        });\n\n        return (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              label: \"Countries\",\n              InputLabelProps: getLabelProps(),\n              InputProps: {\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={handleDelete(item)}\n                  />\n                )),\n                onBlur,\n                onChange: event => {\n                  handleInputChange(event);\n                  onChange(event);\n                },\n                onFocus\n              },\n              inputProps\n            })}\n\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2\n                  })\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: \"relative\"\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  inputRoot: {\n    flexWrap: \"wrap\"\n  },\n  inputInput: {\n    width: \"auto\",\n    flexGrow: 1\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nlet popperNode;\n\nexport default function IntegrationDownshift() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Downshift id=\"downshift-simple\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem\n        }) => {\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\n            placeholder: \"Search for a country (start with a)\"\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: \"Country\",\n                InputLabelProps: getLabelProps({ shrink: true }),\n                InputProps: { onBlur, onFocus },\n                inputProps\n              })}\n\n              <div {...getMenuProps()}>\n                {isOpen ? (\n                  <Paper className={classes.paper} square>\n                    {getSuggestions(inputValue).map((suggestion, index) =>\n                      renderSuggestion({\n                        suggestion,\n                        index,\n                        itemProps: getItemProps({ item: suggestion.label }),\n                        highlightedIndex,\n                        selectedItem\n                      })\n                    )}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Downshift>\n      <div className={classes.divider} />\n      <DownshiftMultiple classes={classes} />\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-popper\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem\n        }) => {\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\n            placeholder: \"With Popper\"\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: \"Country\",\n                InputProps: { onBlur, onFocus },\n                InputLabelProps: getLabelProps({ shrink: true }),\n                inputProps,\n                ref: node => {\n                  popperNode = node;\n                }\n              })}\n\n              <Popper open={isOpen} anchorEl={popperNode}>\n                <div\n                  {...(isOpen\n                    ? getMenuProps({}, { suppressRefError: true })\n                    : {})}\n                >\n                  <Paper\n                    square\n                    style={{\n                      marginTop: 8,\n                      width: popperNode ? popperNode.clientWidth : undefined\n                    }}\n                  >\n                    {getSuggestions(inputValue).map((suggestion, index) =>\n                      renderSuggestion({\n                        suggestion,\n                        index,\n                        itemProps: getItemProps({ item: suggestion.label }),\n                        highlightedIndex,\n                        selectedItem\n                      })\n                    )}\n                  </Paper>\n                </div>\n              </Popper>\n            </div>\n          );\n        }}\n      </Downshift>\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-options\">\n        {({\n          clearSelection,\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          openMenu,\n          selectedItem\n        }) => {\n          const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\n            onChange: event => {\n              if (event.target.value === \"\") {\n                clearSelection();\n              }\n            },\n            onFocus: openMenu,\n            placeholder: \"With the clear & show empty options\"\n          });\n\n          return (\n            <div className={classes.container}>\n              {renderInput({\n                fullWidth: true,\n                classes,\n                label: \"Countries\",\n                InputLabelProps: getLabelProps({ shrink: true }),\n                InputProps: { onBlur, onChange, onFocus },\n                inputProps\n              })}\n\n              <div {...getMenuProps()}>\n                {isOpen ? (\n                  <Paper className={classes.paper} square>\n                    {getSuggestions(inputValue, { showEmpty: true }).map(\n                      (suggestion, index) =>\n                        renderSuggestion({\n                          suggestion,\n                          index,\n                          itemProps: getItemProps({ item: suggestion.label }),\n                          highlightedIndex,\n                          selectedItem\n                        })\n                    )}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Downshift>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Select from \"react-select\";\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NoSsr from \"@material-ui/core/NoSsr\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport PropTypes from \"prop-types\";\n\nconst suggestions = [\n  { label: \"Afghanistan\" },\n  { label: \"Aland Islands\" },\n  { label: \"Albania\" },\n  { label: \"Algeria\" },\n  { label: \"American Samoa\" },\n  { label: \"Andorra\" },\n  { label: \"Angola\" },\n  { label: \"Anguilla\" },\n  { label: \"Antarctica\" },\n  { label: \"Antigua and Barbuda\" },\n  { label: \"Argentina\" },\n  { label: \"Armenia\" },\n  { label: \"Aruba\" },\n  { label: \"Australia\" },\n  { label: \"Austria\" },\n  { label: \"Azerbaijan\" },\n  { label: \"Bahamas\" },\n  { label: \"Bahrain\" },\n  { label: \"Bangladesh\" },\n  { label: \"Barbados\" },\n  { label: \"Belarus\" },\n  { label: \"Belgium\" },\n  { label: \"Belize\" },\n  { label: \"Benin\" },\n  { label: \"Bermuda\" },\n  { label: \"Bhutan\" },\n  { label: \"Bolivia, Plurinational State of\" },\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\n  { label: \"Bosnia and Herzegovina\" },\n  { label: \"Botswana\" },\n  { label: \"Bouvet Island\" },\n  { label: \"Brazil\" },\n  { label: \"British Indian Ocean Territory\" },\n  { label: \"Brunei Darussalam\" }\n].map(suggestion => ({\n  value: suggestion.label,\n  label: suggestion.label\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps }\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps\n        }\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool\n};\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={clsx(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nMultiValue.propTypes = {\n  children: PropTypes.node,\n  isFocused: PropTypes.bool,\n  removeProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object\n};\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nexport default function IntegrationReactSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [single, setSingle] = React.useState(null);\n  const [multi, setMulti] = React.useState(null);\n\n  function handleChangeSingle(value) {\n    setSingle(value);\n  }\n\n  function handleChangeMulti(value) {\n    setMulti(value);\n  }\n\n  const selectStyles = {\n    input: base => ({\n      ...base,\n      color: theme.palette.text.primary,\n      \"& input\": {\n        font: \"inherit\"\n      }\n    })\n  };\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: \"Country\",\n            InputLabelProps: {\n              htmlFor: \"react-select-single\",\n              shrink: true\n            },\n            placeholder: \"Search a country (start with a)\"\n          }}\n          options={suggestions}\n          components={components}\n          value={single}\n          onChange={handleChangeSingle}\n        />\n        <div className={classes.divider} />\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-multiple\"\n          TextFieldProps={{\n            label: \"Countries\",\n            InputLabelProps: {\n              htmlFor: \"react-select-multiple\",\n              shrink: true\n            },\n            placeholder: \"Select multiple countries\"\n          }}\n          options={suggestions}\n          components={components}\n          value={multi}\n          onChange={handleChangeMulti}\n          isMulti\n        />\n      </NoSsr>\n    </div>\n  );\n}\n","import React from \"react\";\nimport deburr from \"lodash/deburr\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport {\n  makeStyles,\n  Popper,\n  MenuItem,\n  Paper,\n  TextField\n} from \"@material-ui/core\";\n\nconst suggestions = [\n  { label: \"Afghanistan\" },\n  { label: \"Aland Islands\" },\n  { label: \"Albania\" },\n  { label: \"Algeria\" },\n  { label: \"American Samoa\" },\n  { label: \"Andorra\" },\n  { label: \"Angola\" },\n  { label: \"Anguilla\" },\n  { label: \"Antarctica\" },\n  { label: \"Antigua and Barbuda\" },\n  { label: \"Argentina\" },\n  { label: \"Armenia\" },\n  { label: \"Aruba\" },\n  { label: \"Australia\" },\n  { label: \"Austria\" },\n  { label: \"Azerbaijan\" },\n  { label: \"Bahamas\" },\n  { label: \"Bahrain\" },\n  { label: \"Bangladesh\" },\n  { label: \"Barbados\" },\n  { label: \"Belarus\" },\n  { label: \"Belgium\" },\n  { label: \"Belize\" },\n  { label: \"Benin\" },\n  { label: \"Bermuda\" },\n  { label: \"Bhutan\" },\n  { label: \"Bolivia, Plurinational State of\" },\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\n  { label: \"Bosnia and Herzegovina\" },\n  { label: \"Botswana\" },\n  { label: \"Bouvet Island\" },\n  { label: \"Brazil\" },\n  { label: \"British Indian Ocean Territory\" },\n  { label: \"Brunei Darussalam\" }\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        }\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map(part => (\n          <span\n            key={part.text}\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\n          >\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [state, setState] = React.useState({\n    single: \"\",\n    popper: \"\"\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    setState({\n      ...state,\n      [name]: newValue\n    });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-simple\",\n          label: \"Country\",\n          placeholder: \"Search a country (start with a)\",\n          value: state.single,\n          onChange: handleChange(\"single\")\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n      <div className={classes.divider} />\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: \"react-autosuggest-popper\",\n          label: \"Country\",\n          placeholder: \"With Popper\",\n          value: state.popper,\n          onChange: handleChange(\"popper\"),\n          inputRef: node => {\n            setAnchorEl(node);\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }}\n        theme={{\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Popper anchorEl={anchorEl} open={Boolean(options.children)}>\n            <Paper\n              square\n              {...options.containerProps}\n              style={{ width: anchorEl ? anchorEl.clientWidth : undefined }}\n            >\n              {options.children}\n            </Paper>\n          </Popper>\n        )}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport IntegrationDownshift from \"./Downshift\";\nimport IntegrationReactSelect from \"./ReactSelect\";\nimport IntegratedAutosuggest from \"./AutoSuggest\";\n\nconst AppAutoComplete = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Autocomplete\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"downshift\">\n        <IntegrationDownshift />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"react select\">\n        <IntegrationReactSelect />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"react autosuggest\">\n        <IntegratedAutosuggest />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppAutoComplete;\n"],"sourceRoot":""}