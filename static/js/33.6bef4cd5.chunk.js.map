{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","event","reason","react_default","a","createElement","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","key","color","size","IconButton","aria-label","className","Close_default","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","objectWithoutProperties","_excluded","Icon","SnackbarContent","assign","clsx","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","objectSpread2","concat","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbar_ConsecutiveSnackbars","_React$Component","inherits","ConsecutiveSnackbars","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","queue","push","Date","getTime","enqueueSnackbar"],"mappings":"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","file":"static/js/33.6bef4cd5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">Note archived</span>}\r\n        action={[\r\n          <Button\r\n            key=\"undo\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={handleClose}\r\n          >\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.margin}\r\n        onClick={handleClick}\r\n      >\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message=\"This is an error message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"warning\"\r\n        className={classes.margin}\r\n        message=\"This is a warning message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"info\"\r\n        className={classes.margin}\r\n        message=\"This is an information message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"success\"\r\n        className={classes.margin}\r\n        message=\"This is a success message!\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"center\" })}>\r\n        Top-Center\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"right\" })}>\r\n        Top-Right\r\n      </Button>\r\n      <Button\r\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}\r\n      >\r\n        Bottom-Right\r\n      </Button>\r\n      <Button\r\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"center\" })}\r\n      >\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}>\r\n        Bottom-Left\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}>\r\n        Top-Left\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={`${vertical},${horizontal}`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst action = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message=\"I love snacks.\"\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={`I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.`}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message=\"I love candy. I love cookies. I love cupcakes.\"\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          \"I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.\"\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n});\r\n\r\nclass ConsecutiveSnackbars extends React.Component {\r\n  queue = [];\r\n\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = message => () => {\r\n    this.queue.push({\r\n      message,\r\n      key: new Date().getTime()\r\n    });\r\n\r\n    if (this.state.open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      this.setState({ open: false });\r\n    } else {\r\n      this.processQueue();\r\n    }\r\n  };\r\n\r\n  processQueue = () => {\r\n    if (this.queue.length > 0) {\r\n      this.setState({\r\n        messageInfo: this.queue.shift(),\r\n        open: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.processQueue();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { messageInfo = {} } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClick(\"Message A\")}>Show message A</Button>\r\n        <Button onClick={this.handleClick(\"Message B\")}>Show message B</Button>\r\n        <Snackbar\r\n          key={messageInfo.key}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          onExited={this.handleExited}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n          action={[\r\n            <Button\r\n              key=\"undo\"\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              onClick={this.handleClose}\r\n            >\r\n              UNDO\r\n            </Button>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConsecutiveSnackbars);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nfunction StackedSnackbar() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    enqueueSnackbar(\"I love snacks.\");\r\n  };\r\n\r\n  const handleClickVariant = variant => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar(\"This is a warning message!\", { variant });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClick}>Show snackbar</Button>\r\n      <Button onClick={handleClickVariant(\"warning\")}>\r\n        Show warning snackbar\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <StackedSnackbar />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}